@{
    ViewData["Title"] = "Admin Dashboard";
    var users = ViewBag.Users as List<Microsoft.AspNetCore.Identity.IdentityUser>;
    var selectedUser = ViewBag.SelectedUser as Microsoft.AspNetCore.Identity.IdentityUser;
    var selectedUserRoles = ViewBag.SelectedUserRoles as string[];
    var allRoles = ViewBag.AllRoles as List<string>;
}

<div class="grid grid-cols-1 md:grid-cols-3 h-screen overflow-hidden">

    <aside class="bg-white border-r p-6 overflow-y-auto shadow-md">
        <h2 class="text-2xl font-semibold mb-6">Users</h2>
        <ul class="space-y-2">
            @foreach (var user in users)
            {
                var isActive = selectedUser?.Id == user.Id;
                var bgColor = isActive ? "bg-blue-600 text-white" : "bg-gray-50 text-gray-800 hover:bg-blue-100";
                <li>
                    <a href="@Url.Action("AdminDashboard", new { selectedUserId = user.Id })"
                       class="flex items-center gap-3 p-3 rounded-lg shadow-sm transition-all duration-150 @bgColor">

                        <div class="flex-shrink-0 bg-blue-100 text-blue-600 w-10 h-10 rounded-full flex items-center justify-center font-semibold text-sm">
                            @user.Email?.Substring(0, 2).ToUpper()
                        </div>

                        <span class="truncate font-medium">@user.Email</span>
                    </a>
                </li>
            }
        </ul>


        @if (selectedUser != null)
        {
            <div class="mt-6">
                <a href="@Url.Action("AdminDashboard")"
                   class="w-full block bg-green-600 text-white px-4 py-2 rounded-md text-center hover:bg-green-700">
                    + Add New User
                </a>
            </div>
        }
    </aside>


    <main class="col-span-2 p-8 bg-gray-50 overflow-y-auto">
        <div class="bg-white p-8 rounded-xl shadow-lg max-w-2xl mx-auto">
            <h2 class="text-2xl font-semibold text-gray-800 mb-6 flex items-center gap-2">
                @(selectedUser != null ? "✏️ Edit User" : "➕ Add New User")
            </h2>

            <form method="post" asp-action="@(selectedUser != null ? "UpdateUser" : "CreateUser")" class="space-y-6">
                @if (selectedUser != null)
                {
                    <input type="hidden" name="userId" value="@selectedUser.Id" />
                }

                <div>
                    <label class="block mb-1 font-medium text-gray-700">Email</label>
                    <input type="email" name="email" value="@selectedUser?.Email" required
                           class="w-full px-4 py-2 rounded-md border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500" />
                </div>

                <div>
                    <label class="block mb-1 font-medium text-gray-700">Password</label>
                    <input type="password" name="password" @(selectedUser == null ? "required" : "")
                           class="w-full px-4 py-2 rounded-md border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500" />
                </div>

                <div>
                    <label class="block mb-1 font-medium text-gray-700">Assign Roles</label>
                    <div class="grid grid-cols-2 gap-3">
                        @foreach (var role in allRoles)
                        {
                            var isChecked = selectedUserRoles != null && selectedUserRoles.Contains(role);
                            <label class="flex items-center gap-2">
                                <input type="checkbox" name="selectedRoles" value="@role" @(isChecked ? "checked" : "")
                                       class="form-checkbox h-5 w-5 text-blue-600 rounded focus:ring-blue-500" />
                                <span class="text-gray-800 font-medium">@role</span>
                            </label>
                        }
                    </div>
                </div>

                <div class="flex justify-between">
                    <button type="submit"
                            class="bg-blue-600 text-white px-6 py-2 rounded-md hover:bg-blue-700 transition font-semibold">
                        @(selectedUser != null ? "Update User" : "Create User")
                    </button>

                    @if (selectedUser != null)
                    {
                        <button type="button" onclick="confirmDelete('@selectedUser.Id')"
                                class="bg-red-600 text-white px-6 py-2 rounded-md hover:bg-red-700 transition font-semibold">
                            Delete User
                        </button>
                    }
                </div>
            </form>
        </div>
    </main>

</div>


<div id="deleteUserModal" class="fixed inset-0 bg-black bg-opacity-50 hidden justify-center items-center z-50">
    <div class="bg-white p-6 rounded-lg shadow-xl">
        <p class="text-lg font-semibold mb-4">Are you sure you want to delete this user?</p>
        <div class="flex justify-end gap-4">
            <button onclick="deleteUser()" class="bg-red-600 text-white px-4 py-2 rounded hover:bg-red-700">Yes, Delete</button>
            <button onclick="closeUserModal()" class="bg-gray-300 px-4 py-2 rounded hover:bg-gray-400">Cancel</button>
        </div>
    </div>
</div>

<script>
    let currentUserId = '';

    function confirmDelete(userId) {
        currentUserId = userId;
        document.getElementById('deleteUserModal').classList.remove('hidden');
        document.getElementById('deleteUserModal').classList.add('flex');
    }

    function closeUserModal() {
        document.getElementById('deleteUserModal').classList.add('hidden');
        document.getElementById('deleteUserModal').classList.remove('flex');
    }

    function deleteUser() {
        $.ajax({
            url: `/Admin/DeleteUser`,
            type: 'POST',
            data: { userId: currentUserId },
            success: function () {
                window.location.href = '/Admin/AdminDashboard';
            },
            error: function (xhr) {
                alert("Error: " + xhr.responseText);
            }
        });
        closeUserModal();
    }
</script>
